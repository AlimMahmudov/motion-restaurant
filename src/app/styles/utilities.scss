.relative {
	position: relative;
}

.inlineBlock {
	display: inline-block;
}

.absolute {
	position: absolute;
}

.nouse {
	user-select: none;
}

.inlineFlexCenter {
	display: inline-flex;
	align-items: center;
	justify-content: center;
}

.flexCenter {
	display: flex;
	align-items: center;
	justify-content: center;
}

.flexCol {
	display: flex;
	flex-direction: column;
}

.popup {
	position: fixed;
	z-index: 90;
	transform: scale(0.9);
	transition: all 0.5s;

	&.active {
		transform: scale(1);
	}
}

.popup_body {
	position: relative;
}

.close-popup {
	position: absolute;
	top: 5px;
	right: 5px;
	padding: 6px;
	border-radius: 6px;
	z-index: 80;

	svg {
		font-size: 30px;
		stroke: var(--gray3);
	}
}

.blur-bg {
	position: fixed;
	z-index: 60;
	top: 0;
	left: 0;
	width: 100%;
	height: 100dvh;
	background: #000000b5;
}

.custom-image {
	height: 100%;
	width: 100%;
	position: relative;
	&.rounded.loading::after {
		border-radius: 12px;
	}
	@media (max-width:1920px) and (min-width: 780px) {
		&.auto-to-notmobile {
			width: auto;
		}
	}
	&.loading::after {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: #36485e;
		z-index: 1;
	}
}

.loader {
	width: 48px;
	height: 48px;
	border: 4px solid #fff;
	border-radius: 50%;
	display: inline-block;
	box-sizing: border-box;
	animation: rotation 1.4s linear infinite;
	&.abs {
		z-index: 10;
		position: absolute;
	}

	&.black {
		border-color: #000;
	}

	&.v2 {
		border-bottom-color: #ef272c;
	}

	&.small {
		width: 20px;
		height: 20px;
		border-width: 3px;
	}
}

@keyframes rotation {
	0% {
		transform: rotate(0deg);
	}

	100% {
		transform: rotate(360deg);
	}
}

.loader-container {
	display: flex;
	align-items: center;
	justify-content: center;
	min-height: 300px;

	&._section {
		height: 380px;
	}

	&.large {
		height: 200px;
	}

	&.small {
		height: 100px;
	}
}

.preloader-container {
	width: 100%;
	height: 100dvh;
}

.preloader {
	position: relative;
	width: 88px;
	height: 88px;
	background: var(--accent);
	//transform: rotateX(65deg) rotate(45deg);
	// remove bellows command for perspective change
	transform: perspective(200px) rotateX(65deg) rotate(45deg);
	color: var(--white);
	animation: layers1 1.3s linear infinite alternate;
}

.preloader:after {
	content: '';
	position: absolute;
	inset: 0;
	background: rgba(255, 255, 255, 0.7);
	animation: layerTr 1.3s linear infinite alternate;
}

@keyframes layers1 {
	0% {
		box-shadow: 0 0 0 0;
	}

	90%,
	100% {
		box-shadow: 20px 20px 0 -4px;
	}
}

@keyframes layerTr {
	0% {
		transform: translate(0, 0) scale(1);
	}

	100% {
		transform: translate(-25px, -25px) scale(1);
	}
}
